{"version":3,"sources":["third-party/_helpers.scss","third-party/_reset.scss","style.css","global/_helpers.scss","global/_base.scss","global/_variables.scss","global/_horse-tornado.scss","third-party/_mq.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["//------------------------------------------------------------------------------\n//       Helper classes\n//-----------------------------------------------------------------------------\n\n//------------------------------------------------------------------------------\n// Hide from both screenreaders and browsers: h5bp.com/u\n//------------------------------------------------------------------------------\n\n.hidden {\n    display: none;\n    visibility: hidden;\n}\n\n//------------------------------------------------------------------------------\n// Hide only visually, but have it available for screenreaders: h5bp.com/v\n//------------------------------------------------------------------------------\n\n.visuallyhidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n//------------------------------------------------------------------------------\n// Extends the .visuallyhidden class to allow the element to be focusable\n// when navigated to via the keyboard: h5bp.com/p\n//------------------------------------------------------------------------------\n\n.visuallyhidden.focusable:active,\n.visuallyhidden.focusable:focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    width: auto;\n}\n\n//------------------------------------------------------------------------------\n// Hide visually and from screenreaders, but maintain layout\n//------------------------------------------------------------------------------\n\n.invisible {\n    visibility: hidden;\n}\n\n","\n/* HTML5 Boilerplate butchery */\nhtml, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video, hr { margin: 0; padding: 0; border: none; font-size: 100%; font: inherit; vertical-align: baseline; }\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main { display: block; }\naudio, canvas, video { display: inline-block; }\naudio:not([controls]) { display: none; }\nul, ol, dl { list-style: none; }\nh1, h2, h3, h4, h5, h6 { font-weight: bold; }\n[hidden] { display: none; }\n\nhtml { overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }\na:hover, a:active { outline: none; }\na:focus { outline: thin dotted; }\n\nblockquote, q { quotes: none; }\nblockquote:before, blockquote:after, q:before, q:after { content: ''; content: none; }\ndel { text-decoration: line-through; }\nabbr[title], dfn[title] { border-bottom: 1px dotted; cursor: help; }\nhr { display: block; height: 1px; border-top: 1px solid #ccc; }\npre, code, kbd, samp { font-family: monospace, sans-serif; }\npre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }\nsmall { font-size: 85%; }\nb, strong, th { font-weight: bold; }\nsub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }\nsup { top: -0.5em; }\nsub { bottom: -0.25em; }\npre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }\n\n/* Forms */\nselect, input, textarea, button { font: 99% sans-serif; }\ninput, select { vertical-align: middle; }\ntextarea { overflow: auto; resize: vertical; }\ninput[type='radio'] { vertical-align: text-bottom; }\ninput[type='checkbox'] { vertical-align: bottom; }\nlabel, input[type='button'], input[type='submit'], input[type='image'], button { cursor: pointer;  }\n\n/* Buttons */\ninput[type='button'], input[type='submit'], input[type='reset'], button { -webkit-appearance: button; }\nbutton { width: auto; overflow: visible; }\nbutton, input { line-height: normal; }\nbutton[disabled], input[disabled] { cursor: default; }\nbutton::-moz-focus-inner, input::-moz-focus-inner { border: none; padding: 0; }\n\n/* Search */\ninput[type='search'] { -webkit-appearance: textfield; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; }\ninput[type='search']::-webkit-search-decoration, input[type='search']::-webkit-search-cancel-button { -webkit-appearance: none; }\n\n/* Table */\ntable { border-collapse: collapse; border-spacing: 0; }\ntd { vertical-align: top; }\nimg { -ms-interpolation-mode: bicubic; vertical-align: middle; }\nsvg:not(:root) { overflow: hidden; }\n\ntable { border-collapse: collapse; border-spacing: 0; }\ntd { vertical-align: top; }\n",".hidden {\n    display: none;\n    visibility: hidden;\n}\n\n.visuallyhidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n.visuallyhidden.focusable:active,\n.visuallyhidden.focusable:focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    width: auto;\n}\n\n.invisible {\n    visibility: hidden;\n}\n\n/* HTML5 Boilerplate butchery */\nhtml, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video, hr {\n    margin: 0;\n    padding: 0;\n    border: none;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {\n    display: block;\n}\n\naudio, canvas, video {\n    display: inline-block;\n}\n\naudio:not([controls]) {\n    display: none;\n}\n\nul, ol, dl {\n    list-style: none;\n}\n\nh1, h2, h3, h4, h5, h6 {\n    font-weight: bold;\n}\n\n[hidden] {\n    display: none;\n}\n\nhtml {\n    overflow-y: scroll;\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n}\n\na:hover, a:active {\n    outline: none;\n}\n\na:focus {\n    outline: thin dotted;\n}\n\nblockquote, q {\n    quotes: none;\n}\n\nblockquote:before, blockquote:after, q:before, q:after {\n    content: '';\n    content: none;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom: 1px dotted;\n    cursor: help;\n}\n\nhr {\n    display: block;\n    height: 1px;\n    border-top: 1px solid #ccc;\n}\n\npre, code, kbd, samp {\n    font-family: monospace, sans-serif;\n}\n\npre {\n    white-space: pre;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n}\n\nsmall {\n    font-size: 85%;\n}\n\nb, strong, th {\n    font-weight: bold;\n}\n\nsub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsup {\n    top: -0.5em;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\npre {\n    white-space: pre;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n}\n\n/* Forms */\nselect, input, textarea, button {\n    font: 99% sans-serif;\n}\n\ninput, select {\n    vertical-align: middle;\n}\n\ntextarea {\n    overflow: auto;\n    resize: vertical;\n}\n\ninput[type='radio'] {\n    vertical-align: text-bottom;\n}\n\ninput[type='checkbox'] {\n    vertical-align: bottom;\n}\n\nlabel, input[type='button'], input[type='submit'], input[type='image'], button {\n    cursor: pointer;\n}\n\n/* Buttons */\ninput[type='button'], input[type='submit'], input[type='reset'], button {\n    -webkit-appearance: button;\n}\n\nbutton {\n    width: auto;\n    overflow: visible;\n}\n\nbutton, input {\n    line-height: normal;\n}\n\nbutton[disabled], input[disabled] {\n    cursor: default;\n}\n\nbutton::-moz-focus-inner, input::-moz-focus-inner {\n    border: none;\n    padding: 0;\n}\n\n/* Search */\ninput[type='search'] {\n    -webkit-appearance: textfield;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box;\n    box-sizing: content-box;\n}\n\ninput[type='search']::-webkit-search-decoration, input[type='search']::-webkit-search-cancel-button {\n    -webkit-appearance: none;\n}\n\n/* Table */\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\ntd {\n    vertical-align: top;\n}\n\nimg {\n    -ms-interpolation-mode: bicubic;\n    vertical-align: middle;\n}\n\nsvg:not(:root) {\n    overflow: hidden;\n}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\ntd {\n    vertical-align: top;\n}\n\n.trigger-size {\n    width: 0;\n    height: 0;\n    display: none;\n}\n\n@media (max-width: 29.99em) {\n    .trigger-size.mobile {\n        display: block;\n    }\n}\n\n@media (min-width: 30em) and (max-width: 47.99em) {\n    .trigger-size.mobile-large {\n        display: block;\n    }\n}\n\n@media (min-width: 48em) and (max-width: 63.99em) {\n    .trigger-size.tablet {\n        display: block;\n    }\n}\n\n@media (min-width: 64em) and (max-width: 87.49em) {\n    .trigger-size.desktop {\n        display: block;\n    }\n}\n\n@media (min-width: 87.5em) {\n    .trigger-size.desktop-large {\n        display: block;\n    }\n}\n\nbody {\n    font-family: \"Helvetica Neue\", helvetica, arial, verdana, sans-serif;\n    font-size: 14px;\n    font-weight: normal;\n    line-height: 1.4;\n}\n\np {\n    margin-bottom: 20px;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-family: \"Helvetica Neue\", helvetica, arial, verdana, sans-serif;\n    font-weight: bold;\n    line-height: 1.4;\n    margin-top: 20px;\n    margin-bottom: 0;\n}\n\nh1 {\n    font-size: 30px;\n}\n\nh2 {\n    font-size: 26px;\n}\n\nh3 {\n    font-size: 22px;\n}\n\nh4 {\n    font-size: 18px;\n}\n\nh5 {\n    font-size: 16px;\n}\n\nh6 {\n    font-size: 14px;\n}\n\nh1 {\n    margin-top: 0;\n    margin-bottom: 20px;\n}\n\na {\n    text-decoration: none;\n    color: #33f;\n}\n\na:hover {\n    color: #306;\n}\n\na:focus,\nbutton:focus,\ninput:focus,\nselect:focus,\n.button:focus,\ntextarea:focus,\ninput[type=checkbox] + label:focus,\ninput[type=radio] + label:focus,\nlabel:focus {\n    outline: 3px solid #1DF00F;\n}\n\na.no-focus,\nbutton.no-focus,\ninput.no-focus,\nselect.no-focus,\n.button.no-focus,\ntextarea.no-focus,\ninput[type=checkbox] + label.no-focus,\ninput[type=radio] + label.no-focus,\nlabel.no-focus {\n    outline: 0;\n}\n\n.horse-tornado {\n    max-width: 960px;\n    margin: 40px auto;\n    position: relative;\n    box-sizing: border-box;\n}\n\n.horse-tornado--contain {\n    height: 0;\n    width: 100%;\n    padding-top: 56.25%;\n    position: relative;\n    overflow: hidden;\n    background-color: #333;\n}\n\n.horse-tornado--slides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background-color: yellow;\n}\n\n.horse-tornado--slide {\n    position: relative;\n    float: left;\n    height: 100%;\n    background-color: #6F1CF8;\n    padding: 30px;\n    box-sizing: border-box;\n    color: #fff;\n}\n\n.horse-tornado--slide:nth-of-type(2) {\n    background-color: #A81CF8;\n}\n\n.horse-tornado--slide:nth-of-type(3) {\n    background-color: #F11CF8;\n    color: #000;\n}\n\n.horse-tornado--slide:nth-of-type(4) {\n    background-color: #F81CA7;\n    color: #000;\n}\n\n.horse-tornado--slide:nth-of-type(5) {\n    background-color: #F81C6C;\n    color: #000;\n}\n\n.horse-tornado--slide-content {\n    text-align: center;\n    font-size: 60px;\n    font-weight: bold;\n}\n\n.horse-tornado--nav {\n    background-color: #666;\n    padding: 30px;\n}\n\n.horse-tornado--prev, .horse-tornado--next, .horse-tornado--slide-link {\n    border: 0;\n    padding: 0;\n    border-radius: 8px;\n    background-color: #000;\n    color: #fff;\n    text-align: center;\n    transition: .5s background-color ease, .5s color ease;\n    cursor: pointer;\n}\n\n.horse-tornado--prev:hover, .horse-tornado--next:hover, .horse-tornado--slide-link:hover {\n    background-color: #555;\n}\n\n.horse-tornado--prev[disabled], .horse-tornado--next[disabled], .horse-tornado--slide-link[disabled] {\n    opacity: .5;\n}\n\n.horse-tornado--prev[disabled]:hover, .horse-tornado--next[disabled]:hover, .horse-tornado--slide-link[disabled]:hover {\n    background-color: #000;\n}\n\n.horse-tornado--prev, .horse-tornado--next {\n    position: absolute;\n    top: 42.45283%;\n    transform: translate(0, -50%);\n    text-indent: 170%;\n    width: 40px;\n    height: 40px;\n    white-space: nowrap;\n    overflow: hidden;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n    background-size: auto 20px;\n}\n\n.horse-tornado--prev {\n    left: 10px;\n    background-image: url(../img/arrow-left.png);\n}\n\n.horse-tornado--next {\n    right: 10px;\n    background-image: url(../img/arrow-right.png);\n}\n\n.horse-tornado--slide-links {\n    display: flex;\n    justify-content: center;\n}\n\n.horse-tornado--slide-link {\n    margin: 0 20px;\n    padding: 0;\n    width: 40px;\n    height: 40px;\n    line-height: 40px;\n}\n\n.horse-tornado--slide-link.active {\n    background-color: #fff;\n    color: #000;\n    cursor: default;\n}\n","//----------------------------------------------------\n//      use if you need to check for things\n//      in JS plugins - more reliable\n//      than window width, etc\n//----------------------------------------------------\n.trigger-size {\n    width: 0;\n    height: 0;\n    display: none;\n\n    @include mq($until: mobileLandscape) {\n        &.mobile {\n            display: block;\n        }\n    }\n\n    @include mq($from: mobileLandscape, $until: tablet) {\n        &.mobile-large {\n            display: block;\n        }\n    }\n\n    @include mq($from: tablet, $until: desktop) {\n        &.tablet {\n            display: block;\n        }\n    }\n\n    @include mq($from: desktop, $until: wide) {\n        &.desktop {\n            display: block;\n        }\n    }\n\n    @include mq($from: wide) {\n        &.desktop-large {\n            display: block;\n        }\n    }\n}\n","//----------------------------------------------------\n//      basic typography\n//----------------------------------------------------\n\nbody {\n    font-family: $font-sans;\n    font-size: $font-size;\n    font-weight: $font-weight-regular;\n    line-height: $line-height-base;\n}\n\np {\n    margin-bottom: 20px;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-family: $font-heading;\n    font-weight: $font-weight-bold;\n    line-height: $line-height-base;\n    margin-top: 20px;\n    margin-bottom: 0;\n}\n\n@each $header, $size in (h1: $font-size-h1, h2: $font-size-h2, h3: $font-size-h3, h4: $font-size-h4, h5: $font-size-h5, h6: $font-size-h6) {\n    #{$header} {\n        font-size: $size;\n    }\n}\n\nh1 {\n    margin-top: 0;\n    margin-bottom: 20px;\n}\n\n//----------------------------------------------------\n//  other base styles\n//----------------------------------------------------\n\na {\n    text-decoration: none;\n    color: $link-color;\n\n    &:hover {\n        color: $link-color-hover;\n    }\n}\n\n//----------------------------------------------------\n//      accessibliity thing\n//----------------------------------------------------\n\na,\nbutton,\ninput,\nselect,\n.button,\ntextarea,\ninput[type=checkbox] + label,\ninput[type=radio] + label,\nlabel {\n    &:focus {\n        outline: 3px solid $accessibility;\n    }\n\n    &.no-focus {\n        outline: 0;\n    }\n}\n","//----------------------------------------------------\n// Colours\n//----------------------------------------------------\n\n$link-color: #33f;\n$link-color-hover: #306;\n$text-color: #333;\n\n$accessibility: #1DF00F;\n\n//----------------------------------------------------\n//  fonts\n//----------------------------------------------------\n\n$font-sans: 'Helvetica Neue', helvetica, arial, verdana, sans-serif !default;\n$font-serif: Georgia, 'Times New Roman', Times, serif !default;\n$font-mono: Monaco, Menlo, Consolas, 'Courier New', monospace !default;\n$font-heading: 'Helvetica Neue', helvetica, arial, verdana, sans-serif !default;\n\n//----------------------------------------------------\n//  base typography\n//----------------------------------------------------\n\n$font-size: 14px;\n$font-size-h1: 30px;\n$font-size-h2: 26px;\n$font-size-h3: 22px;\n$font-size-h4: 18px;\n$font-size-h5: 16px;\n$font-size-h6: 14px;\n\n$line-height-base: 1.4;\n\n$font-weight-light: lighter;\n$font-weight-regular: normal;\n$font-weight-bold: bold;\n","//----------------------------------------------------\n//      horse tornado bits\n//----------------------------------------------------\n\n.horse-tornado {\n    max-width: 960px;\n    margin: 40px auto;\n    position: relative;\n    box-sizing: border-box;\n\n    &--contain {\n        height: 0;\n        width: 100%;\n        padding-top: 56.25%;\n        position: relative;\n        overflow: hidden;\n        background-color: #333;\n    }\n\n    &--slides {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        background-color: yellow;\n    }\n\n    &--slide {\n        position: relative;\n        float: left;\n        height: 100%;\n        background-color: #6F1CF8;\n        padding: 30px;\n        box-sizing: border-box;\n        color: #fff;\n\n        &:nth-of-type(2) {\n            background-color: #A81CF8;\n        }\n\n        &:nth-of-type(3) {\n            background-color: #F11CF8;\n            color: #000;\n        }\n\n        &:nth-of-type(4) {\n            background-color: #F81CA7;\n            color: #000;\n        }\n\n        &:nth-of-type(5) {\n            background-color: #F81C6C;\n            color: #000;\n        }\n    }\n\n    &--slide-content {\n        text-align: center;\n        font-size: 60px;\n        font-weight: bold;\n    }\n\n    &--nav {\n        background-color: #666;\n        padding: 30px;\n    }\n\n    &--prev,\n    &--next,\n    &--slide-link {\n        border: 0;\n        padding: 0;\n        border-radius: 8px;\n        background-color: #000;\n        color: #fff;\n        text-align: center;\n        transition: .5s background-color ease, .5s color ease;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #555;\n        }\n\n        &[disabled] {\n            opacity: .5;\n\n            &:hover {\n                background-color: #000;\n            }\n        }\n    }\n\n    &--prev,\n    &--next {\n        position: absolute;\n        top: (270/636)*100%;\n        transform: translate(0,-50%);\n        text-indent: 170%;\n        width: 40px;\n        height: 40px;\n        white-space: nowrap;\n        overflow: hidden;\n        background-repeat: no-repeat;\n        background-position: 50% 50%;\n        background-size: auto 20px;\n    }\n\n    &--prev {\n        left: 10px;\n        background-image: url(../img/arrow-left.png);\n    }\n\n    &--next {\n        right: 10px;\n        background-image: url(../img/arrow-right.png);\n    }\n\n    &--slide-links {\n        display: flex;\n        justify-content: center;\n    }\n\n    &--slide-link {\n        margin: 0 20px;\n        padding: 0;\n        width: 40px;\n        height: 40px;\n        line-height: 40px;\n\n        &.active {\n            background-color: #fff;\n            color: #000;\n            cursor: default;\n        }\n    }\n}\n","@charset 'UTF-8'; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @include 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @include 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px + 0px); // That may fail.\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: ( L: 900px, XL: 1200px );\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n        // Output only rules that start at or span our target width\n        @if ($and == false and ($min-width <= $target-width) and (($until == false) or ($max-width >= $target-width))) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: '#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})';\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],"sourceRoot":"/source/"}